let express,itemsController;_d3d‍.x([["default",()=>_d3d‍.o]]);_d3d‍.w("express",[["default",["express"],function(v){express=v}]]);_d3d‍.w("../controllers/items.controller",[["default",["itemsController"],function(v){itemsController=v}]]);


const router = express.Router();

router.get("/get", (req, res) => {
  try {
    const result = itemsController.GetItems((error, results, fields) => {
      if (error) {
        return res.status(500).json({ error: error });
      }
      _d3d‍.g.console.log('at call' + result);
      return res.json(results[0]);
    });

  } catch (e) {
    _d3d‍.g.console.log(e);
    res.status(500).json({ error: e });
  }
});

router.delete("/delete/:id", (req, res) => {
  try {
    _d3d‍.g.console.log('At routes' + req.params.id)
    if (req.params.id) {
      const result = itemsController.DeleteItem(req.params.id, (error, results, fields) => {
        if (error) {
          return res.status(500).json({ error: error });
        }
        _d3d‍.g.console.log('at call' + result);
        return res.json(results[0]);
      });
    }
    else { res.status(400).json({ error: "Bad Request" }); }
  } catch (e) {
    _d3d‍.g.console.log(e);
    res.status(500).json({ error: e });
  }
});

router.post("/add", (req, res) => {
  try {
    _d3d‍.g.console.log('At call' + JSON.stringify(req.body))
    const result = itemsController.AddItem(req.body, (error, results, fields) => {
      if (error) {
        return res.status(500).json({ error: error });
      }

      _d3d‍.g.console.log(results[0])
      return res.json(result);
    });
  } catch (e) {
    _d3d‍.g.console.log(e);
    res.status(500).json({ error: e });
  }
});

router.get("/getDate", async (req, res) => {
  try {
    const result = await itemsController.GetDate();
    _d3d‍.g.console.log(result);
    res.json(result);
  } catch (e) {
    _d3d‍.g.console.log(e);
    res.status(500).json({ error: e });
  }
});

_d3d‍.d(router);
